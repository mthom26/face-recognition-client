// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CustomForm displays correct inputs renders correctly for login 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CustomForm
    showEmail={true}
    showName={false}
    showPassword={true}
    showPwConfirm={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        false,
        <input
          id="email"
          name="email"
          onChange={[Function]}
          placeholder="Email"
          type="text"
          value=""
        />,
        <input
          id="password"
          name="password"
          onChange={[Function]}
          placeholder="Password"
          type="password"
          value=""
        />,
        false,
        <button
          className="button"
          onClick={[Function]}
        >
          Submit
        </button>,
      ],
      "className": "form",
    },
    "ref": null,
    "rendered": Array [
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "email",
          "name": "email",
          "onChange": [Function],
          "placeholder": "Email",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "password",
          "name": "password",
          "onChange": [Function],
          "placeholder": "Password",
          "type": "password",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Submit",
          "className": "button",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Submit",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          <input
            id="email"
            name="email"
            onChange={[Function]}
            placeholder="Email"
            type="text"
            value=""
          />,
          <input
            id="password"
            name="password"
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value=""
          />,
          false,
          <button
            className="button"
            onClick={[Function]}
          >
            Submit
          </button>,
        ],
        "className": "form",
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "email",
            "name": "email",
            "onChange": [Function],
            "placeholder": "Email",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "password",
            "name": "password",
            "onChange": [Function],
            "placeholder": "Password",
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Submit",
            "className": "button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Submit",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`CustomForm displays correct inputs renders correctly for signup 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CustomForm
    showEmail={true}
    showName={true}
    showPassword={true}
    showPwConfirm={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          id="name"
          name="name"
          onChange={[Function]}
          placeholder="Name"
          type="text"
          value=""
        />,
        <input
          id="email"
          name="email"
          onChange={[Function]}
          placeholder="Email"
          type="text"
          value=""
        />,
        <input
          id="password"
          name="password"
          onChange={[Function]}
          placeholder="Password"
          type="password"
          value=""
        />,
        <input
          id="confirmPassword"
          name="confirmPassword"
          onChange={[Function]}
          placeholder="Confirm Password"
          type="password"
          value=""
        />,
        <button
          className="button"
          onClick={[Function]}
        >
          Submit
        </button>,
      ],
      "className": "form",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "name",
          "name": "name",
          "onChange": [Function],
          "placeholder": "Name",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "email",
          "name": "email",
          "onChange": [Function],
          "placeholder": "Email",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "password",
          "name": "password",
          "onChange": [Function],
          "placeholder": "Password",
          "type": "password",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "confirmPassword",
          "name": "confirmPassword",
          "onChange": [Function],
          "placeholder": "Confirm Password",
          "type": "password",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Submit",
          "className": "button",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Submit",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            id="name"
            name="name"
            onChange={[Function]}
            placeholder="Name"
            type="text"
            value=""
          />,
          <input
            id="email"
            name="email"
            onChange={[Function]}
            placeholder="Email"
            type="text"
            value=""
          />,
          <input
            id="password"
            name="password"
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value=""
          />,
          <input
            id="confirmPassword"
            name="confirmPassword"
            onChange={[Function]}
            placeholder="Confirm Password"
            type="password"
            value=""
          />,
          <button
            className="button"
            onClick={[Function]}
          >
            Submit
          </button>,
        ],
        "className": "form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "name",
            "name": "name",
            "onChange": [Function],
            "placeholder": "Name",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "email",
            "name": "email",
            "onChange": [Function],
            "placeholder": "Email",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "password",
            "name": "password",
            "onChange": [Function],
            "placeholder": "Password",
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "confirmPassword",
            "name": "confirmPassword",
            "onChange": [Function],
            "placeholder": "Confirm Password",
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Submit",
            "className": "button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Submit",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
